module pgql-lang

imports

  Layout
  Names
  Literals
  GraphPattern
  SolutionModifiers
  Legacy
  Expressions
  Modify
  DDL

context-free start-symbols

  Start

template options

  keyword -/- [a-zA-Z0-9]

context-free syntax

  Start = Statement

  Statement = Query

  Query = Legacy11Query

  Query = Legacy10Query

  Query.Query =
    <
      <{CommonPathExpression "\n"}*>
      <SelectOrModify>
      <FromWhereClauses?>
      <GroupByClause?>
      <HavingClause?>
      <OrderByClause?>
      <LimitOffsetClauses?>
    >

  FromWhereClauses.FromWhereClauses = <FROM <{TableExpression ","}+> <WhereClause?>> {case-insensitive}

  TableExpression = GraphMatch

  GraphMatch.GraphMatch = <<MatchKeyword?> <PathPattern> <RowsPerMatch?> <OnClause?>>

  GraphMatch.ParenthesizedGraphMatch = <MATCH ( <{PathPattern ","}+> ) <RowsPerMatch?> <OnClause?>> {case-insensitive}

  MatchKeyword.MatchKeyword = <MATCH> {case-insensitive}

  OnClause.OnClause = <ON <GraphName>> {case-insensitive}

  SelectOrModify = SelectClause
  SelectOrModify = ModifyClause

  CommonPathExpression.CommonPathExpression = <PATH <Identifier> <AsignSymbol> <PathPattern> <WhereClause?> <CostClause?>> {case-insensitive}
  AsignSymbol.Pgql11AsignSymbol = <AS> {case-insensitive}

  SelectClause.SelectClause = <SELECT <Distinct?> <Projection>> {case-insensitive}

  Projection.SelectList = <<{SelectElem ", "}+>>
  SelectElem = ExpAsVar
  SelectElem.AllProperties = <<VarRef>.* <ColumnNamePrefix?>>
  ColumnNamePrefix.ColumnNamePrefix = <PREFIX <String>> {case-insensitive}

  Projection.Star = <*>

  RowsPerMatch.OneRowPerMatch = <ONE ROW PER MATCH> {case-insensitive}
  RowsPerMatch.OneRowPerVertex = <ONE ROW PER VERTEX (<Identifier>)> {case-insensitive}
  RowsPerMatch.OneRowPerEdge = <ONE ROW PER EDGE (<Identifier>)> {case-insensitive}
  RowsPerMatch.OneRowPerStep = <ONE ROW PER STEP (<Identifier>, <Identifier>, <Identifier>)> {case-insensitive}
