module Literals

imports

  Names
  Legacy
  Expressions

template options

  keyword -/- [a-zA-Z0-9]

context-free syntax

  Literal              = Number
  Literal              = Boolean
  Literal              = String
  Literal              = BindVariable
  Literal              = Date
  Literal              = Time
  Literal              = Timestamp
  Literal              = Interval

  ArrayLiteral         = Array
  ArrayLiteral         = BindVariable

  Interval.Interval    = <INTERVAL <String> <DateTimeField>> 
  DateTimeField.Year   = <YEAR> {case-insensitive}
  DateTimeField.Month  = <MONTH> {case-insensitive}
  DateTimeField.Day    = <DAY> {case-insensitive}
  DateTimeField.Hour   = <HOUR> {case-insensitive}
  DateTimeField.Minute = <MINUTE> {case-insensitive}
  DateTimeField.Second = <SECOND> {case-insensitive}

context-free syntax

  Number.Integer            = UNSIGNED-INT
  Number.Decimal            = UNSIGNED-DECIMAL
  String.String             = STRING
  Boolean.True              = <true> {case-insensitive}
  Boolean.False             = <false> {case-insensitive}
  BindVariable.BindVariable = <?>
  Date.Date                 = <DATE <STRING>> {case-insensitive}
  Time.Time                 = <TIME <STRING>> {case-insensitive}
  Timestamp.Timestamp       = <TIMESTAMP <STRING>> {case-insensitive}
  Literal.IllegalNull       = <null> {case-insensitive} // not valid syntax; just here so that we can generate an appropriate error to use IS NULL or IS NOT NULL instead
  Array.Array               = <(<{Exp ", "}+>)>

lexical syntax

  UNSIGNED-INT         = [0-9]+
  UNSIGNED-DECIMAL     = ( [0-9]* "." [0-9]+ ) | ( [0-9]+ "." )

  STRING               = "'" (~[\'] | ESCAPE-CHAR)* "'"
  ESCAPE-CHAR          = "\\'" | "''"

lexical restrictions // greedy matching

  UNSIGNED-INT     -/- [0-9]
  UNSIGNED-DECIMAL -/- [0-9]
