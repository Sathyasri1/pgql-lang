module SolutionModifiers

imports

  Names
  Literals
  Expressions

template options

  keyword -/- [a-zA-Z0-9]

context-free syntax

  GroupByClause.GroupByClause = <GROUP BY <{ExpAsVar ", "}+>> {case-insensitive}

  HavingClause.HavingClause = <HAVING <Exp>> {case-insensitive}

  OrderByClause.OrderByClause = <ORDER BY <{OrderElem ", "}+>> {case-insensitive}
  OrderElem = <<Exp>>
  OrderElem.Asc = <<Exp> ASC> {case-insensitive}
  OrderElem.Desc = <<Exp> DESC> {case-insensitive}

  LimitOffsetClauses.LimitOffsetClauses = LimitOrFetchFirstClause OffsetClause? // deprecated; wrong order of clauses
  LimitOffsetClauses.OffsetLimitClauses = OffsetClause LimitOrFetchFirstClause?
  LimitClauseOnly = LimitClause
  LimitOrFetchFirstClause = LimitClause
  LimitOrFetchFirstClause = FetchFirstClause
  OffsetClause.OffsetClause = <OFFSET <IntOrBindVariable> <RowOrRows?>> {case-insensitive}
  LimitClause.LimitClause = <LIMIT <IntOrBindVariable>> {case-insensitive}
  FetchFirstClause.FetchFirstClause = <FETCH <FirstOrNext?> <IntOrBindVariable> <RowOrRows?> ONLY> {case-insensitive}
  FirstOrNext.First = <FIRST> {case-insensitive}
  FirstOrNext.Next = <NEXT> {case-insensitive}
  RowOrRows.Row = <ROW> {case-insensitive}
  RowOrRows.Rows = <ROWS> {case-insensitive}

  IntOrBindVariable.Integer = UNSIGNED-INT
  IntOrBindVariable = BindVariable
