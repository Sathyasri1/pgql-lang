module variables

language pgql-lang

test Restriction: colon [[

  SELECT *
  FROM GRAPH_TABLE (
         g MATCH (n[[:]]person)
         WHERE EXISTS ( SELECT * 
                        FROM GRAPH_TABLE (
                               g MATCH (m IS person) -> (o[[:]]person)
                               WHERE element_id(n) = element_id(m)
                               COLUMNS ( m.prop ) ) )
         COLUMNS ( n.prop ) )

]] error like "GRAPH_TABLE restriction: use IS instead of :" at #1, #2

test Restriction: graph name [[

  SELECT *
  FROM [[GRAPH_TABLE (
         MATCH (person IS person) -[e]-> ()
         COLUMNS ( person.first_name ) )]]

]] error like "GRAPH_TABLE restriction: graph name required" at #1

test Restriction: subquery without GRAPH_TABLE [[

  SELECT *
  FROM GRAPH_TABLE (
         g MATCH (person IS person)
         WHERE EXISTS ( SELECT * 
                        FROM [[MATCH (n) ON g,]]
                             [[MATCH ( (n) ) ON g )]]
            OR EXISTS ( [[SELECT * FROM g MATCH (n)]] )
            OR EXISTS ( [[SELECT * WHERE (n)]] )
         COLUMNS ( n.prop ) )

]] error like "GRAPH_TABLE restriction: subqueries inside GRAPH_TABLE should use GRAPH_TABLE instead of top-level MATCH" at #1, #2
   error like "Subquery uses older version of PGQL syntax; please make sure that both inner and outer query use the same PGQL version" at #3, #4

test Restriction: vertex sharing with outer query (1) [[

  SELECT *
  FROM GRAPH_TABLE (
         g MATCH (person IS person)
         WHERE EXISTS ( SELECT *
                        FROM GRAPH_TABLE (
                               g MATCH ([[person]])
                               COLUMNS ( 1 ) ) )
         COLUMNS ( person.first_name ) )

]] error like "GRAPH_TABLE restriction: vertex sharing between inner and outer query is not allowed, introduce a new variable name like person_new and use WHERE element_id(person_new) = element_id(person)" at #1

test Restriction: vertex sharing with outer query (2) [[

  SELECT *
  FROM GRAPH_TABLE (
         g MATCH (person IS person)
         WHERE EXISTS ( SELECT *
                        FROM GRAPH_TABLE (
                               g MATCH (n)
                               WHERE EXISTS ( SELECT *
                                             FROM GRAPH_TABLE (
                                               g MATCH ([[person]]) -> ([[n]])
                                               COLUMNS ( 1 ) ) )
                               COLUMNS ( 1 ) ) )
         COLUMNS ( person.first_name ) )

]] error like "GRAPH_TABLE restriction: vertex sharing between inner and outer query is not allowed, introduce a new variable name like person_new and use WHERE element_id(person_new) = element_id(person)" at #1
   error like "GRAPH_TABLE restriction: vertex sharing between inner and outer query is not allowed, introduce a new variable name like n_new and use WHERE element_id(n_new) = element_id(n)" at #2

test Restriction: LIMIT [[

  SELECT *
  FROM GRAPH_TABLE (
         g MATCH (person IS person)
         WHERE EXISTS ( SELECT *
                        FROM GRAPH_TABLE (
                               g MATCH (car IS car)
                               COLUMNS ( 1 )
                             )
                        [[LIMIT 11]] )
         COLUMNS ( person.first_name ) )

]] error like "GRAPH_TABLE restriction: use FETCH FIRST 11 ROWS ONLY" at #1

test Restriction: projecting vertex/edge objects [[

  SELECT *
  FROM GRAPH_TABLE (
         g MATCH (n) -[e]-> (m)
         COLUMNS ( [[n,]] [[e,]] [[m )]] )

]] error like "GRAPH_TABLE restriction: cannot project vertex or edge objects" at #1, #2, #3
